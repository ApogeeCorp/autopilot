<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="terminal" baseProfile="full" viewBox="0 0 687 826" width="687" version="1.1">
    <defs>
        <termtosvg:template_settings xmlns:termtosvg="https://github.com/nbedos/termtosvg">
            <termtosvg:screen_geometry columns="80" rows="40"/>
        </termtosvg:template_settings>
        <style type="text/css" id="generated-style"><![CDATA[:root {
            --animation-duration: 3444ms;
        }
        
        #screen {
                font-family: 'DejaVu Sans Mono', monospace;
                font-style: normal;
                font-size: 14px;
            }

        text {
            dominant-baseline: text-before-edge;
            white-space: pre;
        }]]></style>
        <style type="text/css" id="user-style">
            /* gjm8 color theme (source: https://terminal.sexy/) */
            .foreground {fill: #c5c5c5;}
            .background {fill: #1c1c1c;}
            .color0 {fill: #1c1c1c;}
            .color1 {fill: #ff005b;}
            .color2 {fill: #cee318;}
            .color3 {fill: #ffe755;}
            .color4 {fill: #048ac7;}
            .color5 {fill: #833c9f;}
            .color6 {fill: #0ac1cd;}
            .color7 {fill: #e5e5e5;}
            .color8 {fill: #1c1c1c;}
            .color9 {fill: #ff005b;}
            .color10 {fill: #cee318;}
            .color11 {fill: #ffe755;}
            .color12 {fill: #048ac7;}
            .color13 {fill: #833c9f;}
            .color14 {fill: #0ac1cd;}
            .color15 {fill: #e5e5e5;}
            #wide_track {
                transform: translate(150px, calc(100% - 45px));
            }
            #track {
                transform: translate(150px, calc(100% - 33px));
            }
            #slider_button {
                transform: translate(0px, calc(100% - 30px));
            }
            #timer {
                transform: translate(60px, calc(100% - 38px));
                font-family: 'DejaVu Sans Mono', monospace;
                font-style: normal;
                font-size: 14px;
            }
            #play-button {
                transform: translate(30px, calc(100% - 45px));
            }
            #pause-button {
                transform: translate(30px, calc(100% - 45px));
            }
        </style>
        <rect id="slider_wide_track" height="30px" width="65%"/>
        <rect id="slider_track" height="6px" width="65%"/>
        <circle id="slider_button" r="10px" class="color1"/>
        <g id="icon-play">
            <rect x="-5" y="0" width="25" height="30" class="background"/>
            <path d="M0 4l14 11-14 11z"/>
        </g>
        <g id="icon-pause">
            <rect x="-5" y="0" width="25" height="30" class="background"/>
            <rect x="0" y="5" width="5" height="20"/>
            <rect x="10" y="5" width="5" height="20"/>
        </g>
    </defs>
    <rect id="terminalui" class="background" width="100%" height="100%" ry="4.5826941"/>
    <circle cx="24" cy="23" r="7" class="color1"/>
    <circle cx="44" cy="23" r="7" class="color3"/>
    <circle cx="64" cy="23" r="7" class="color2"/>
    <svg id="screen" width="640" x="23" y="50" viewBox="0 0 640 680" preserveAspectRatio="xMidYMin meet">
        <rect class="background" height="100%" width="100%" x="0" y="0"/><defs><g id="g1"><text class="background" textLength="8" x="0"> </text><text class="foreground" textLength="632" x="8">                                                                               </text></g></defs><g display="none"><rect class="foreground" height="17" width="8" x="0" y="0"/><use y="0" xlink:href="#g1"/><animate attributeName="display" begin="0ms; anim_last.end" dur="2ms" from="inline" to="inline"/></g><defs><g id="g2"><text class="background" textLength="8" x="0"> </text></g></defs><g display="none"><rect class="foreground" height="17" width="8" x="0" y="204"/><use y="204" xlink:href="#g2"/><animate attributeName="display" begin="2ms; anim_last.end+2ms" dur="2442ms" from="inline" to="inline"/></g><defs><g id="g3"><text class="foreground" textLength="640" x="0">     _           _           ____             _             ____                </text></g></defs><defs><g id="g4"><text class="foreground" textLength="80" x="0">          </text></g></defs><defs><g id="g5"><text class="foreground" textLength="640" x="0">    / \   _   _ | |_  ___   |  _ \  ___  ___ (_) ____ ___  |  _ \   ___  _ __ __</text></g></defs><defs><g id="g6"><text class="foreground" textLength="80" x="0">_    ___  </text></g></defs><defs><g id="g7"><text class="foreground" textLength="640" x="0">   / _ \ | | | || __|/ _ \  | |_) |/ _ \/ __|| ||_  // _ \ | | | | / _ \| '_ ` _</text></g></defs><defs><g id="g8"><text class="foreground" textLength="80" x="0"> \  / _ \ </text></g></defs><defs><g id="g9"><text class="foreground" textLength="640" x="0">  / ___ \| |_| || |_| (_) | |  _ &lt;|  __/\__ \| | / /|  __/ | |_| ||  __/| | | | </text></g></defs><defs><g id="g10"><text class="foreground" textLength="80" x="0">| || (_) |</text></g></defs><defs><g id="g11"><text class="foreground" textLength="640" x="0"> /_/   \_\\__,_| \__|\___/  |_| \_\\___||___/|_|/___|\___| |____/  \___||_| |_| </text></g></defs><defs><g id="g12"><text class="foreground" textLength="80" x="0">|_| \___/ </text></g></defs><defs><g id="g13"><text class="foreground" textLength="640" x="0">                                                                                </text></g></defs><g display="none"><use y="0" xlink:href="#g3"/><use y="17" xlink:href="#g4"/><use y="34" xlink:href="#g5"/><use y="51" xlink:href="#g6"/><use y="68" xlink:href="#g7"/><use y="85" xlink:href="#g8"/><use y="102" xlink:href="#g9"/><use y="119" xlink:href="#g10"/><use y="136" xlink:href="#g11"/><use y="153" xlink:href="#g12"/><use y="170" xlink:href="#g13"/><use y="187" xlink:href="#g4"/><animate attributeName="display" begin="2ms; anim_last.end+2ms" dur="3442ms" from="inline" to="inline"/></g><defs><g id="g14"><text class="foreground" textLength="16" x="0">^C</text><text class="background" textLength="8" x="16"> </text></g></defs><g display="none"><rect class="foreground" height="17" width="8" x="16" y="204"/><use y="204" xlink:href="#g14"/><animate attributeName="display" begin="2444ms; anim_last.end+2444ms" dur="1000ms" from="inline" to="inline" id="anim_last"/></g></svg>
    <text id="timer" class="foreground">0:00/0:00</text>
    <!-- Invisible, wider track to make frame seeking easier -->
    <use xlink:href="#slider_wide_track" id="wide_track" class="background"/>
    <!-- Visible track -->
    <use xlink:href="#slider_track" id="track" class="foreground"/>
    <use xlink:href="#slider_button" id="slider_1" x="0px">
        <animate attributeName="x" begin="0ms;anim_slider_button.end" dur="0ms" from="0" to="0" id="anim_slider_button"/>
    </use>
    <use xlink:href="#icon-play" id="play-button" class="foreground"/>
    <use xlink:href="#icon-pause" id="pause-button" class="foreground"/>
    <script type="text/javascript">
var terminal   = document.getElementById('terminal');
var screen = terminal.getElementById('screen');
var slider_1  = terminal.getElementById('slider_1');
var anim_slider_button = document.getElementById('anim_slider_button');
var style = getComputedStyle(terminal);
var animation_duration = parseInt(style.getPropertyValue('--animation-duration')) / 1000;

function getTranslateX(elem) {
  var style = window.getComputedStyle(elem);
  var matrix = new WebKitCSSMatrix(style.webkitTransform);
  return parseInt(matrix.m41)
}

track_begin = getTranslateX(terminal.getElementById('track'))
anim_slider_button.setAttribute('from', track_begin);

var track_width = terminal.getElementById('track').getBoundingClientRect().width;
anim_slider_button.setAttribute('to', track_begin + track_width);

var play_button = terminal.getElementById('play-button');
var pause_button = terminal.getElementById('pause-button');

// Set slider button animation duration
anim_slider_button.setAttribute('dur', style.getPropertyValue('--animation-duration'));

play_button.setAttribute('display', 'none');
pause_button.setAttribute('display', 'inline');

function togglePlayPause() {
    if (terminal.animationsPaused() || screen.animationsPaused()) {
        terminal.unpauseAnimations()
        screen.unpauseAnimations()
        play_button.setAttribute('display', 'none')
        pause_button.setAttribute('display', 'inline')
    } else {
        terminal.pauseAnimations()
        screen.pauseAnimations()
        play_button.setAttribute('display', 'inline')
        pause_button.setAttribute('display', 'none')
    }
};

play_button.addEventListener('click', togglePlayPause, false)
pause_button.addEventListener('click', togglePlayPause, false)

var limitLower = parseInt(anim_slider_button.getAttribute('from'));
/* Subtract a few pixels so that bringing the button to the end of the track does make it jump to
the beginning */
var limitUpper = parseInt(anim_slider_button.getAttribute('to')) - 8;

var timer = terminal.getElementById('timer')

function timer_from_ms(t) {
    minutes = Math.floor(t / 60);
    seconds = Math.floor(t % 60);
    return minutes + ':' + ("0" + seconds).slice(-2)
}

function update_timer(){
    var current_time = terminal.getCurrentTime() % animation_duration
    timer.textContent =  timer_from_ms(current_time) + "/" + timer_from_ms(animation_duration)
}

setInterval(update_timer, "100ms")

// Return X position for an event
function mx(evt){
    var pt = terminal.createSVGPoint();
    pt.x = evt.clientX;
    return pt.matrixTransform(terminal.getScreenCTM().inverse());
}

// Set the current time of the animation to get the slider button under the cursor
var move = function(evt){
    var cursor_position = mx(evt);
    if ( cursor_position.x &lt; limitLower || cursor_position.x &gt; limitUpper ) {
        return;
    }
    new_time = animation_duration * (cursor_position.x - limitLower) / (limitUpper - limitLower)
    terminal.setCurrentTime(new_time)
    screen.setCurrentTime(new_time)
};

// Move the slider button to the cursor position when a click happens on the track of the slider
terminal.getElementById('wide_track').addEventListener('click', move, false);
terminal.getElementById('track').addEventListener('click', move, false);

// Enable slider button dragging along the track
var dragging = false;
slider_1.addEventListener('mousedown',function(evt){
        is_playing = !(terminal.animationsPaused() &amp;&amp; screen.animationsPaused())
        if (is_playing) {
            terminal.pauseAnimations()
            screen.pauseAnimations()
        }

        dragging = true;
        terminal.addEventListener('mousemove', move, false);
        document.documentElement.addEventListener('mouseup', function(){
                dragging = false;
                if (is_playing) {
                    terminal.unpauseAnimations()
                    screen.unpauseAnimations()
                }
                terminal.removeEventListener('mousemove', move, false);
        }, false);
}, false);
</script>
</svg>