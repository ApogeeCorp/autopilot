---
swagger: "2.0"
info:
  description: "libopenstorage autopilot API"
  version: "1.0.0"
  title: "autopilot"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:9000"
schemes:
- "http"
security:
- basicAuth: []
paths:
  /collectors:
    get:
      tags:
      - "collector"
      summary: "Get a list of telemetry collectors"
      description: "Returns an array of telemetry collectors defined in the system"
      operationId: "collectorList"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Collector"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "collector"
      summary: "Create a new telemetry collector"
      description: "Create a new telemetry collector from the provided definition"
      operationId: "collectorCreate"
      parameters:
      - in: "body"
        name: "collector"
        description: "The collector to create"
        required: true
        schema:
          $ref: "#/definitions/Collector"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Collector"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /collectors/{collector_id}:
    get:
      tags:
      - "collector"
      summary: "Get a list of telemetry collectors"
      description: "Returns the request collected object"
      operationId: "collectorGet"
      parameters:
      - name: "collector_id"
        in: "path"
        description: "The id of the collector"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Collector"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "collector"
      summary: "Update a collector object"
      description: "Update the properties of the specified collector"
      operationId: "collectorUpdate"
      parameters:
      - name: "collector_id"
        in: "path"
        description: "The id of the collector"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "collector"
        description: "The collector to create"
        required: true
        schema:
          $ref: "#/definitions/Collector"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "collector"
      summary: "Get a list of telemetry collectors"
      description: "Returns the request collected object"
      operationId: "collectorDelete"
      parameters:
      - name: "collector_id"
        in: "path"
        description: "The id of the collector"
        required: true
        type: "string"
        format: "uuid"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /providers:
    get:
      tags:
      - "provider"
      summary: "Get a list of telemetry providers"
      description: "Returns an array of telemetry providers defined in the system"
      operationId: "providerList"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Provider"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "provider"
      summary: "Create a new telemetry provider"
      description: "Create a new telemetry provider from the provided definition"
      operationId: "providerCreate"
      parameters:
      - in: "body"
        name: "provider"
        description: "The provider to create"
        required: true
        schema:
          $ref: "#/definitions/Provider"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Provider"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /providers/{provider_id}:
    get:
      tags:
      - "provider"
      summary: "Get a list of telemetry providers"
      description: "Returns the request collected object"
      operationId: "providerGet"
      parameters:
      - name: "provider_id"
        in: "path"
        description: "The id of the provider"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Provider"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "provider"
      summary: "Update a provider object"
      description: "Update the properties of the specified provider"
      operationId: "providerUpdate"
      parameters:
      - name: "provider_id"
        in: "path"
        description: "The id of the provider"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "provider"
        description: "The provider to create"
        required: true
        schema:
          $ref: "#/definitions/Provider"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "provider"
      summary: "Get a list of telemetry providers"
      description: "Returns the request collected object"
      operationId: "providerDelete"
      parameters:
      - name: "provider_id"
        in: "path"
        description: "The id of the provider"
        required: true
        type: "string"
        format: "uuid"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /samples:
    get:
      tags:
      - "sample"
      summary: "Get a list of telemetry samples"
      description: "Returns an array of telemetry samples defined in the system"
      operationId: "sampleList"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sample"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "sample"
      summary: "Create a new telemetry sample"
      description: "Create a new telemetry sample from the provided definition"
      operationId: "sampleCreate"
      parameters:
      - in: "body"
        name: "sample"
        description: "The sample to create"
        required: true
        schema:
          $ref: "#/definitions/Sample"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Sample"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /samples/{sample_id}:
    get:
      tags:
      - "sample"
      summary: "Get a list of telemetry samples"
      description: "Returns the request collected object"
      operationId: "sampleGet"
      parameters:
      - name: "sample_id"
        in: "path"
        description: "The id of the sample"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Sample"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "sample"
      summary: "Update a sample object"
      description: "Update the properties of the specified sample"
      operationId: "sampleUpdate"
      parameters:
      - name: "sample_id"
        in: "path"
        description: "The id of the sample"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "sample"
        description: "The sample to create"
        required: true
        schema:
          $ref: "#/definitions/Sample"
      responses:
        204:
          description: "No Content"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "sample"
      summary: "Get a list of telemetry samples"
      description: "Returns the request collected object"
      operationId: "sampleDelete"
      parameters:
      - name: "sample_id"
        in: "path"
        description: "The id of the sample"
        required: true
        type: "string"
        format: "uuid"
      responses:
        204:
          description: "No Content"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /tasks:
    get:
      tags:
      - "task"
      summary: "Get a list of tasks"
      description: "Returns an array of tasks"
      operationId: "taskList"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /tasks/{task_id}:
    get:
      tags:
      - "task"
      summary: "Get a task"
      description: "Returns the request task object"
      operationId: "taskGet"
      parameters:
      - name: "task_id"
        in: "path"
        description: "The id of the task"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Task"
        400:
          description: "BadRequest"
          examples:
            application/json:
              message: "invalid parameter"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "NotFound"
          examples:
            application/json:
              message: "object not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "ServerError"
          examples:
            application/json:
              message: "internal server error"
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  basicAuth:
    type: "basic"
definitions:
  Collector:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "The collector id"
      provider_id:
        type: "string"
        format: "uuid"
        description: "The provider id the provider this collector will use"
      params:
        type: "object"
        description: "The parameters to pass to the provider"
        additionalProperties:
          type: "object"
          properties: {}
      interval:
        type: "string"
        description: "The interval the collector will run at"
    description: "A collector pulls data from a telemetry provider, parses, \nand\
      \ reformats the data to be consumed by the autopilot engine.\n"
    example:
      provider_id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      interval: "interval"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      params:
        key: "{}"
  Task:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "The task id"
      type:
        type: "string"
        description: "The task type"
        enum:
        - "collector"
      params:
        type: "object"
        description: "The parameters to pass to the provider"
        additionalProperties:
          type: "object"
          properties: {}
      run_at:
        type: "string"
        format: "date-time"
        description: "The timestamp the next execution of the task"
      status:
        type: "string"
        description: "The task status"
        enum:
        - "pending"
        - "running"
        - "succeeded"
        - "failed"
    description: "A task is a scheduled operation in the engine\n"
    example:
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      run_at: "2000-01-23T04:56:07.000+00:00"
      type: "collector"
      params:
        key: "{}"
      status: "pending"
  ProviderType:
    type: "string"
    description: "ProviderType:\n  * prometheus - a prometheus server\n"
    enum:
    - "prometheus"
  Provider:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "The provider id"
      name:
        type: "string"
        description: "The provider name"
      type:
        $ref: "#/definitions/ProviderType"
      config:
        type: "object"
        description: "The provider configuration"
        additionalProperties:
          type: "object"
          properties: {}
    description: "A provider is a telemetry source that provides stats and anlytics\
      \ data in the autopilot csv format\n"
    example:
      name: "name"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      type: {}
      config:
        key: "{}"
  Sample:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "The sample id"
      provider:
        $ref: "#/definitions/ProviderType"
      created_at:
        type: "string"
        format: "date-time"
        description: "The timestamp for the sample"
      meta:
        type: "object"
        description: "Provider specific meta data"
        additionalProperties:
          type: "object"
          properties: {}
    description: "A sample is a set of collected data from a particular provider that\
      \ has be reformatted\nand prepared for consumption. The sample data itself is\
      \ stored in the filesystem.\n"
    example:
      provider: {}
      meta:
        key: "{}"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The error code"
        x-nullable: true
      message:
        type: "string"
        description: "The error message"
      detail:
        type: "object"
        description: "The error details"
        additionalProperties:
          type: "string"
        x-omitempty: true
        x-nullable: true
    description: "Common Error Model"
responses:
  NotFound:
    description: "NotFound"
    examples:
      application/json:
        message: "object not found"
    schema:
      $ref: "#/definitions/Error"
  Unauthorized:
    description: "Unauthorized"
    examples:
      application/json:
        message: "access denied"
    schema:
      $ref: "#/definitions/Error"
  BadRequest:
    description: "BadRequest"
    examples:
      application/json:
        message: "invalid parameter"
    schema:
      $ref: "#/definitions/Error"
  ServerError:
    description: "ServerError"
    examples:
      application/json:
        message: "internal server error"
    schema:
      $ref: "#/definitions/Error"
