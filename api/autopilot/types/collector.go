// Code generated by go-swagger (hiro); DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.
//

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Collector A collector pulls data from a provider at regular intervals and stores the data in an autopilot format for the ML engine.
//
// swagger:model Collector
type Collector struct {

	// The interval for the collecto to run and collect
	Interval *string `json:"interval,omitempty"`

	// The collector name
	Name string `json:"name,omitempty"`

	// The collector provider params
	Params map[string]interface{} `json:"params,omitempty"`

	// The provider name
	Provider string `json:"provider,omitempty"`

	// The sample size of data to collect, will truncate the interval to this value
	SampleSize *string `json:"sample_size,omitempty"`
}

// Validate validates this collector
func (m *Collector) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Collector) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Collector) UnmarshalBinary(b []byte) error {
	var res Collector
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
