// Code generated by go-swagger (hiro); DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Proposal A proposal is a formatted propsal object
//
// swagger:model Proposal
type Proposal struct {

	// The cluster id
	ClusterID string `json:"cluster_id,omitempty"`

	// The node id
	NodeID string `json:"node_id,omitempty"`

	// The rule that triggered the proposal
	Rule string `json:"rule,omitempty"`

	// The proposal value
	Value string `json:"value,omitempty"`

	// the volume id
	VolumeID string `json:"volume_id,omitempty"`
}

// Validate validates this proposal
func (m *Proposal) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Proposal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Proposal) UnmarshalBinary(b []byte) error {
	var res Proposal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
