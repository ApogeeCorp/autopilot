// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// ProviderUpdateNoContentCode is the HTTP code returned for type ProviderUpdateNoContent
const ProviderUpdateNoContentCode int = 204

/*ProviderUpdateNoContent No Content

swagger:response providerUpdateNoContent
*/
type ProviderUpdateNoContent struct {
}

// NewProviderUpdateNoContent creates ProviderUpdateNoContent with default headers values
func NewProviderUpdateNoContent() *ProviderUpdateNoContent {

	return &ProviderUpdateNoContent{}
}

// WriteResponse to the client
func (o *ProviderUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// ProviderUpdateBadRequestCode is the HTTP code returned for type ProviderUpdateBadRequest
const ProviderUpdateBadRequestCode int = 400

/*ProviderUpdateBadRequest BadRequest

swagger:response providerUpdateBadRequest
*/
type ProviderUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewProviderUpdateBadRequest creates ProviderUpdateBadRequest with default headers values
func NewProviderUpdateBadRequest() *ProviderUpdateBadRequest {

	return &ProviderUpdateBadRequest{}
}

// WithPayload adds the payload to the provider update bad request response
func (o *ProviderUpdateBadRequest) WithPayload(payload *types.Error) *ProviderUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider update bad request response
func (o *ProviderUpdateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProviderUpdateInternalServerErrorCode is the HTTP code returned for type ProviderUpdateInternalServerError
const ProviderUpdateInternalServerErrorCode int = 500

/*ProviderUpdateInternalServerError ServerError

swagger:response providerUpdateInternalServerError
*/
type ProviderUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewProviderUpdateInternalServerError creates ProviderUpdateInternalServerError with default headers values
func NewProviderUpdateInternalServerError() *ProviderUpdateInternalServerError {

	return &ProviderUpdateInternalServerError{}
}

// WithPayload adds the payload to the provider update internal server error response
func (o *ProviderUpdateInternalServerError) WithPayload(payload *types.Error) *ProviderUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider update internal server error response
func (o *ProviderUpdateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
