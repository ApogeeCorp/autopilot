// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// ProviderGetOKCode is the HTTP code returned for type ProviderGetOK
const ProviderGetOKCode int = 200

/*ProviderGetOK OK

swagger:response providerGetOK
*/
type ProviderGetOK struct {

	/*
	  In: Body
	*/
	Payload *types.Provider `json:"body,omitempty"`
}

// NewProviderGetOK creates ProviderGetOK with default headers values
func NewProviderGetOK() *ProviderGetOK {

	return &ProviderGetOK{}
}

// WithPayload adds the payload to the provider get o k response
func (o *ProviderGetOK) WithPayload(payload *types.Provider) *ProviderGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider get o k response
func (o *ProviderGetOK) SetPayload(payload *types.Provider) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProviderGetBadRequestCode is the HTTP code returned for type ProviderGetBadRequest
const ProviderGetBadRequestCode int = 400

/*ProviderGetBadRequest BadRequest

swagger:response providerGetBadRequest
*/
type ProviderGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewProviderGetBadRequest creates ProviderGetBadRequest with default headers values
func NewProviderGetBadRequest() *ProviderGetBadRequest {

	return &ProviderGetBadRequest{}
}

// WithPayload adds the payload to the provider get bad request response
func (o *ProviderGetBadRequest) WithPayload(payload *types.Error) *ProviderGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider get bad request response
func (o *ProviderGetBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProviderGetNotFoundCode is the HTTP code returned for type ProviderGetNotFound
const ProviderGetNotFoundCode int = 404

/*ProviderGetNotFound NotFound

swagger:response providerGetNotFound
*/
type ProviderGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewProviderGetNotFound creates ProviderGetNotFound with default headers values
func NewProviderGetNotFound() *ProviderGetNotFound {

	return &ProviderGetNotFound{}
}

// WithPayload adds the payload to the provider get not found response
func (o *ProviderGetNotFound) WithPayload(payload *types.Error) *ProviderGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider get not found response
func (o *ProviderGetNotFound) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProviderGetInternalServerErrorCode is the HTTP code returned for type ProviderGetInternalServerError
const ProviderGetInternalServerErrorCode int = 500

/*ProviderGetInternalServerError ServerError

swagger:response providerGetInternalServerError
*/
type ProviderGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewProviderGetInternalServerError creates ProviderGetInternalServerError with default headers values
func NewProviderGetInternalServerError() *ProviderGetInternalServerError {

	return &ProviderGetInternalServerError{}
}

// WithPayload adds the payload to the provider get internal server error response
func (o *ProviderGetInternalServerError) WithPayload(payload *types.Error) *ProviderGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the provider get internal server error response
func (o *ProviderGetInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProviderGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
