// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// RuleUpdateNoContentCode is the HTTP code returned for type RuleUpdateNoContent
const RuleUpdateNoContentCode int = 204

/*RuleUpdateNoContent No Content

swagger:response ruleUpdateNoContent
*/
type RuleUpdateNoContent struct {
}

// NewRuleUpdateNoContent creates RuleUpdateNoContent with default headers values
func NewRuleUpdateNoContent() *RuleUpdateNoContent {

	return &RuleUpdateNoContent{}
}

// WriteResponse to the client
func (o *RuleUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// RuleUpdateBadRequestCode is the HTTP code returned for type RuleUpdateBadRequest
const RuleUpdateBadRequestCode int = 400

/*RuleUpdateBadRequest BadRequest

swagger:response ruleUpdateBadRequest
*/
type RuleUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewRuleUpdateBadRequest creates RuleUpdateBadRequest with default headers values
func NewRuleUpdateBadRequest() *RuleUpdateBadRequest {

	return &RuleUpdateBadRequest{}
}

// WithPayload adds the payload to the rule update bad request response
func (o *RuleUpdateBadRequest) WithPayload(payload *types.Error) *RuleUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rule update bad request response
func (o *RuleUpdateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RuleUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RuleUpdateInternalServerErrorCode is the HTTP code returned for type RuleUpdateInternalServerError
const RuleUpdateInternalServerErrorCode int = 500

/*RuleUpdateInternalServerError ServerError

swagger:response ruleUpdateInternalServerError
*/
type RuleUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewRuleUpdateInternalServerError creates RuleUpdateInternalServerError with default headers values
func NewRuleUpdateInternalServerError() *RuleUpdateInternalServerError {

	return &RuleUpdateInternalServerError{}
}

// WithPayload adds the payload to the rule update internal server error response
func (o *RuleUpdateInternalServerError) WithPayload(payload *types.Error) *RuleUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rule update internal server error response
func (o *RuleUpdateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RuleUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
