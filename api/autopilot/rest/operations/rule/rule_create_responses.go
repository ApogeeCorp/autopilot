// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// RuleCreateCreatedCode is the HTTP code returned for type RuleCreateCreated
const RuleCreateCreatedCode int = 201

/*RuleCreateCreated Created

swagger:response ruleCreateCreated
*/
type RuleCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *types.Rule `json:"body,omitempty"`
}

// NewRuleCreateCreated creates RuleCreateCreated with default headers values
func NewRuleCreateCreated() *RuleCreateCreated {

	return &RuleCreateCreated{}
}

// WithPayload adds the payload to the rule create created response
func (o *RuleCreateCreated) WithPayload(payload *types.Rule) *RuleCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rule create created response
func (o *RuleCreateCreated) SetPayload(payload *types.Rule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RuleCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RuleCreateBadRequestCode is the HTTP code returned for type RuleCreateBadRequest
const RuleCreateBadRequestCode int = 400

/*RuleCreateBadRequest BadRequest

swagger:response ruleCreateBadRequest
*/
type RuleCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewRuleCreateBadRequest creates RuleCreateBadRequest with default headers values
func NewRuleCreateBadRequest() *RuleCreateBadRequest {

	return &RuleCreateBadRequest{}
}

// WithPayload adds the payload to the rule create bad request response
func (o *RuleCreateBadRequest) WithPayload(payload *types.Error) *RuleCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rule create bad request response
func (o *RuleCreateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RuleCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RuleCreateInternalServerErrorCode is the HTTP code returned for type RuleCreateInternalServerError
const RuleCreateInternalServerErrorCode int = 500

/*RuleCreateInternalServerError ServerError

swagger:response ruleCreateInternalServerError
*/
type RuleCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewRuleCreateInternalServerError creates RuleCreateInternalServerError with default headers values
func NewRuleCreateInternalServerError() *RuleCreateInternalServerError {

	return &RuleCreateInternalServerError{}
}

// WithPayload adds the payload to the rule create internal server error response
func (o *RuleCreateInternalServerError) WithPayload(payload *types.Error) *RuleCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rule create internal server error response
func (o *RuleCreateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RuleCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
