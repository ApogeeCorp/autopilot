// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// SourceUpdateNoContentCode is the HTTP code returned for type SourceUpdateNoContent
const SourceUpdateNoContentCode int = 204

/*SourceUpdateNoContent No Content

swagger:response sourceUpdateNoContent
*/
type SourceUpdateNoContent struct {
}

// NewSourceUpdateNoContent creates SourceUpdateNoContent with default headers values
func NewSourceUpdateNoContent() *SourceUpdateNoContent {

	return &SourceUpdateNoContent{}
}

// WriteResponse to the client
func (o *SourceUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// SourceUpdateBadRequestCode is the HTTP code returned for type SourceUpdateBadRequest
const SourceUpdateBadRequestCode int = 400

/*SourceUpdateBadRequest BadRequest

swagger:response sourceUpdateBadRequest
*/
type SourceUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSourceUpdateBadRequest creates SourceUpdateBadRequest with default headers values
func NewSourceUpdateBadRequest() *SourceUpdateBadRequest {

	return &SourceUpdateBadRequest{}
}

// WithPayload adds the payload to the source update bad request response
func (o *SourceUpdateBadRequest) WithPayload(payload *types.Error) *SourceUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source update bad request response
func (o *SourceUpdateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourceUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SourceUpdateInternalServerErrorCode is the HTTP code returned for type SourceUpdateInternalServerError
const SourceUpdateInternalServerErrorCode int = 500

/*SourceUpdateInternalServerError ServerError

swagger:response sourceUpdateInternalServerError
*/
type SourceUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSourceUpdateInternalServerError creates SourceUpdateInternalServerError with default headers values
func NewSourceUpdateInternalServerError() *SourceUpdateInternalServerError {

	return &SourceUpdateInternalServerError{}
}

// WithPayload adds the payload to the source update internal server error response
func (o *SourceUpdateInternalServerError) WithPayload(payload *types.Error) *SourceUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source update internal server error response
func (o *SourceUpdateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourceUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
