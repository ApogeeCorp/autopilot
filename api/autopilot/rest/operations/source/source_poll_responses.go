// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// SourcePollOKCode is the HTTP code returned for type SourcePollOK
const SourcePollOKCode int = 200

/*SourcePollOK OK

swagger:response sourcePollOK
*/
type SourcePollOK struct {

	/*
	  In: Body
	*/
	Payload *types.Sample `json:"body,omitempty"`
}

// NewSourcePollOK creates SourcePollOK with default headers values
func NewSourcePollOK() *SourcePollOK {

	return &SourcePollOK{}
}

// WithPayload adds the payload to the source poll o k response
func (o *SourcePollOK) WithPayload(payload *types.Sample) *SourcePollOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source poll o k response
func (o *SourcePollOK) SetPayload(payload *types.Sample) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourcePollOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SourcePollBadRequestCode is the HTTP code returned for type SourcePollBadRequest
const SourcePollBadRequestCode int = 400

/*SourcePollBadRequest BadRequest

swagger:response sourcePollBadRequest
*/
type SourcePollBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSourcePollBadRequest creates SourcePollBadRequest with default headers values
func NewSourcePollBadRequest() *SourcePollBadRequest {

	return &SourcePollBadRequest{}
}

// WithPayload adds the payload to the source poll bad request response
func (o *SourcePollBadRequest) WithPayload(payload *types.Error) *SourcePollBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source poll bad request response
func (o *SourcePollBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourcePollBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SourcePollNotFoundCode is the HTTP code returned for type SourcePollNotFound
const SourcePollNotFoundCode int = 404

/*SourcePollNotFound NotFound

swagger:response sourcePollNotFound
*/
type SourcePollNotFound struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSourcePollNotFound creates SourcePollNotFound with default headers values
func NewSourcePollNotFound() *SourcePollNotFound {

	return &SourcePollNotFound{}
}

// WithPayload adds the payload to the source poll not found response
func (o *SourcePollNotFound) WithPayload(payload *types.Error) *SourcePollNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source poll not found response
func (o *SourcePollNotFound) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourcePollNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SourcePollInternalServerErrorCode is the HTTP code returned for type SourcePollInternalServerError
const SourcePollInternalServerErrorCode int = 500

/*SourcePollInternalServerError ServerError

swagger:response sourcePollInternalServerError
*/
type SourcePollInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSourcePollInternalServerError creates SourcePollInternalServerError with default headers values
func NewSourcePollInternalServerError() *SourcePollInternalServerError {

	return &SourcePollInternalServerError{}
}

// WithPayload adds the payload to the source poll internal server error response
func (o *SourcePollInternalServerError) WithPayload(payload *types.Error) *SourcePollInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the source poll internal server error response
func (o *SourcePollInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SourcePollInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
