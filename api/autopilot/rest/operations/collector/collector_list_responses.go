// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package collector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// CollectorListOKCode is the HTTP code returned for type CollectorListOK
const CollectorListOKCode int = 200

/*CollectorListOK OK

swagger:response collectorListOK
*/
type CollectorListOK struct {

	/*
	  In: Body
	*/
	Payload []types.Collector `json:"body,omitempty"`
}

// NewCollectorListOK creates CollectorListOK with default headers values
func NewCollectorListOK() *CollectorListOK {

	return &CollectorListOK{}
}

// WithPayload adds the payload to the collector list o k response
func (o *CollectorListOK) WithPayload(payload []types.Collector) *CollectorListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector list o k response
func (o *CollectorListOK) SetPayload(payload []types.Collector) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]types.Collector, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CollectorListInternalServerErrorCode is the HTTP code returned for type CollectorListInternalServerError
const CollectorListInternalServerErrorCode int = 500

/*CollectorListInternalServerError ServerError

swagger:response collectorListInternalServerError
*/
type CollectorListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewCollectorListInternalServerError creates CollectorListInternalServerError with default headers values
func NewCollectorListInternalServerError() *CollectorListInternalServerError {

	return &CollectorListInternalServerError{}
}

// WithPayload adds the payload to the collector list internal server error response
func (o *CollectorListInternalServerError) WithPayload(payload *types.Error) *CollectorListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector list internal server error response
func (o *CollectorListInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
