// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package collector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// CollectorUpdateNoContentCode is the HTTP code returned for type CollectorUpdateNoContent
const CollectorUpdateNoContentCode int = 204

/*CollectorUpdateNoContent No Content

swagger:response collectorUpdateNoContent
*/
type CollectorUpdateNoContent struct {
}

// NewCollectorUpdateNoContent creates CollectorUpdateNoContent with default headers values
func NewCollectorUpdateNoContent() *CollectorUpdateNoContent {

	return &CollectorUpdateNoContent{}
}

// WriteResponse to the client
func (o *CollectorUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// CollectorUpdateBadRequestCode is the HTTP code returned for type CollectorUpdateBadRequest
const CollectorUpdateBadRequestCode int = 400

/*CollectorUpdateBadRequest BadRequest

swagger:response collectorUpdateBadRequest
*/
type CollectorUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewCollectorUpdateBadRequest creates CollectorUpdateBadRequest with default headers values
func NewCollectorUpdateBadRequest() *CollectorUpdateBadRequest {

	return &CollectorUpdateBadRequest{}
}

// WithPayload adds the payload to the collector update bad request response
func (o *CollectorUpdateBadRequest) WithPayload(payload *types.Error) *CollectorUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector update bad request response
func (o *CollectorUpdateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectorUpdateInternalServerErrorCode is the HTTP code returned for type CollectorUpdateInternalServerError
const CollectorUpdateInternalServerErrorCode int = 500

/*CollectorUpdateInternalServerError ServerError

swagger:response collectorUpdateInternalServerError
*/
type CollectorUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewCollectorUpdateInternalServerError creates CollectorUpdateInternalServerError with default headers values
func NewCollectorUpdateInternalServerError() *CollectorUpdateInternalServerError {

	return &CollectorUpdateInternalServerError{}
}

// WithPayload adds the payload to the collector update internal server error response
func (o *CollectorUpdateInternalServerError) WithPayload(payload *types.Error) *CollectorUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector update internal server error response
func (o *CollectorUpdateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
