// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package collector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// CollectorDeleteNoContentCode is the HTTP code returned for type CollectorDeleteNoContent
const CollectorDeleteNoContentCode int = 204

/*CollectorDeleteNoContent No Content

swagger:response collectorDeleteNoContent
*/
type CollectorDeleteNoContent struct {
}

// NewCollectorDeleteNoContent creates CollectorDeleteNoContent with default headers values
func NewCollectorDeleteNoContent() *CollectorDeleteNoContent {

	return &CollectorDeleteNoContent{}
}

// WriteResponse to the client
func (o *CollectorDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// CollectorDeleteNotFoundCode is the HTTP code returned for type CollectorDeleteNotFound
const CollectorDeleteNotFoundCode int = 404

/*CollectorDeleteNotFound NotFound

swagger:response collectorDeleteNotFound
*/
type CollectorDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewCollectorDeleteNotFound creates CollectorDeleteNotFound with default headers values
func NewCollectorDeleteNotFound() *CollectorDeleteNotFound {

	return &CollectorDeleteNotFound{}
}

// WithPayload adds the payload to the collector delete not found response
func (o *CollectorDeleteNotFound) WithPayload(payload *types.Error) *CollectorDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector delete not found response
func (o *CollectorDeleteNotFound) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CollectorDeleteInternalServerErrorCode is the HTTP code returned for type CollectorDeleteInternalServerError
const CollectorDeleteInternalServerErrorCode int = 500

/*CollectorDeleteInternalServerError ServerError

swagger:response collectorDeleteInternalServerError
*/
type CollectorDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewCollectorDeleteInternalServerError creates CollectorDeleteInternalServerError with default headers values
func NewCollectorDeleteInternalServerError() *CollectorDeleteInternalServerError {

	return &CollectorDeleteInternalServerError{}
}

// WithPayload adds the payload to the collector delete internal server error response
func (o *CollectorDeleteInternalServerError) WithPayload(payload *types.Error) *CollectorDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the collector delete internal server error response
func (o *CollectorDeleteInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CollectorDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
