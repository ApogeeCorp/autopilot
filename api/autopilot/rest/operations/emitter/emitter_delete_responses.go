// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package emitter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// EmitterDeleteNoContentCode is the HTTP code returned for type EmitterDeleteNoContent
const EmitterDeleteNoContentCode int = 204

/*EmitterDeleteNoContent No Content

swagger:response emitterDeleteNoContent
*/
type EmitterDeleteNoContent struct {
}

// NewEmitterDeleteNoContent creates EmitterDeleteNoContent with default headers values
func NewEmitterDeleteNoContent() *EmitterDeleteNoContent {

	return &EmitterDeleteNoContent{}
}

// WriteResponse to the client
func (o *EmitterDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// EmitterDeleteNotFoundCode is the HTTP code returned for type EmitterDeleteNotFound
const EmitterDeleteNotFoundCode int = 404

/*EmitterDeleteNotFound NotFound

swagger:response emitterDeleteNotFound
*/
type EmitterDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewEmitterDeleteNotFound creates EmitterDeleteNotFound with default headers values
func NewEmitterDeleteNotFound() *EmitterDeleteNotFound {

	return &EmitterDeleteNotFound{}
}

// WithPayload adds the payload to the emitter delete not found response
func (o *EmitterDeleteNotFound) WithPayload(payload *types.Error) *EmitterDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the emitter delete not found response
func (o *EmitterDeleteNotFound) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmitterDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EmitterDeleteInternalServerErrorCode is the HTTP code returned for type EmitterDeleteInternalServerError
const EmitterDeleteInternalServerErrorCode int = 500

/*EmitterDeleteInternalServerError ServerError

swagger:response emitterDeleteInternalServerError
*/
type EmitterDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewEmitterDeleteInternalServerError creates EmitterDeleteInternalServerError with default headers values
func NewEmitterDeleteInternalServerError() *EmitterDeleteInternalServerError {

	return &EmitterDeleteInternalServerError{}
}

// WithPayload adds the payload to the emitter delete internal server error response
func (o *EmitterDeleteInternalServerError) WithPayload(payload *types.Error) *EmitterDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the emitter delete internal server error response
func (o *EmitterDeleteInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmitterDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
