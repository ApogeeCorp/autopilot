// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package emitter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// EmitterListOKCode is the HTTP code returned for type EmitterListOK
const EmitterListOKCode int = 200

/*EmitterListOK OK

swagger:response emitterListOK
*/
type EmitterListOK struct {

	/*
	  In: Body
	*/
	Payload []*types.Emitter `json:"body,omitempty"`
}

// NewEmitterListOK creates EmitterListOK with default headers values
func NewEmitterListOK() *EmitterListOK {

	return &EmitterListOK{}
}

// WithPayload adds the payload to the emitter list o k response
func (o *EmitterListOK) WithPayload(payload []*types.Emitter) *EmitterListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the emitter list o k response
func (o *EmitterListOK) SetPayload(payload []*types.Emitter) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmitterListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*types.Emitter, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// EmitterListInternalServerErrorCode is the HTTP code returned for type EmitterListInternalServerError
const EmitterListInternalServerErrorCode int = 500

/*EmitterListInternalServerError ServerError

swagger:response emitterListInternalServerError
*/
type EmitterListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewEmitterListInternalServerError creates EmitterListInternalServerError with default headers values
func NewEmitterListInternalServerError() *EmitterListInternalServerError {

	return &EmitterListInternalServerError{}
}

// WithPayload adds the payload to the emitter list internal server error response
func (o *EmitterListInternalServerError) WithPayload(payload *types.Error) *EmitterListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the emitter list internal server error response
func (o *EmitterListInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmitterListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
