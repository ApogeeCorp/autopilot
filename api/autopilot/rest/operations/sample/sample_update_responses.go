// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package sample

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// SampleUpdateNoContentCode is the HTTP code returned for type SampleUpdateNoContent
const SampleUpdateNoContentCode int = 204

/*SampleUpdateNoContent No Content

swagger:response sampleUpdateNoContent
*/
type SampleUpdateNoContent struct {
}

// NewSampleUpdateNoContent creates SampleUpdateNoContent with default headers values
func NewSampleUpdateNoContent() *SampleUpdateNoContent {

	return &SampleUpdateNoContent{}
}

// WriteResponse to the client
func (o *SampleUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// SampleUpdateBadRequestCode is the HTTP code returned for type SampleUpdateBadRequest
const SampleUpdateBadRequestCode int = 400

/*SampleUpdateBadRequest BadRequest

swagger:response sampleUpdateBadRequest
*/
type SampleUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSampleUpdateBadRequest creates SampleUpdateBadRequest with default headers values
func NewSampleUpdateBadRequest() *SampleUpdateBadRequest {

	return &SampleUpdateBadRequest{}
}

// WithPayload adds the payload to the sample update bad request response
func (o *SampleUpdateBadRequest) WithPayload(payload *types.Error) *SampleUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample update bad request response
func (o *SampleUpdateBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SampleUpdateInternalServerErrorCode is the HTTP code returned for type SampleUpdateInternalServerError
const SampleUpdateInternalServerErrorCode int = 500

/*SampleUpdateInternalServerError ServerError

swagger:response sampleUpdateInternalServerError
*/
type SampleUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSampleUpdateInternalServerError creates SampleUpdateInternalServerError with default headers values
func NewSampleUpdateInternalServerError() *SampleUpdateInternalServerError {

	return &SampleUpdateInternalServerError{}
}

// WithPayload adds the payload to the sample update internal server error response
func (o *SampleUpdateInternalServerError) WithPayload(payload *types.Error) *SampleUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample update internal server error response
func (o *SampleUpdateInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
