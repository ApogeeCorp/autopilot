// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Portworx Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file at the
// root of this project.

package sample

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	types "github.com/libopenstorage/autopilot/api/autopilot/types"
)

// SampleGetOKCode is the HTTP code returned for type SampleGetOK
const SampleGetOKCode int = 200

/*SampleGetOK OK

swagger:response sampleGetOK
*/
type SampleGetOK struct {

	/*
	  In: Body
	*/
	Payload *types.Sample `json:"body,omitempty"`
}

// NewSampleGetOK creates SampleGetOK with default headers values
func NewSampleGetOK() *SampleGetOK {

	return &SampleGetOK{}
}

// WithPayload adds the payload to the sample get o k response
func (o *SampleGetOK) WithPayload(payload *types.Sample) *SampleGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample get o k response
func (o *SampleGetOK) SetPayload(payload *types.Sample) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SampleGetBadRequestCode is the HTTP code returned for type SampleGetBadRequest
const SampleGetBadRequestCode int = 400

/*SampleGetBadRequest BadRequest

swagger:response sampleGetBadRequest
*/
type SampleGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSampleGetBadRequest creates SampleGetBadRequest with default headers values
func NewSampleGetBadRequest() *SampleGetBadRequest {

	return &SampleGetBadRequest{}
}

// WithPayload adds the payload to the sample get bad request response
func (o *SampleGetBadRequest) WithPayload(payload *types.Error) *SampleGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample get bad request response
func (o *SampleGetBadRequest) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SampleGetNotFoundCode is the HTTP code returned for type SampleGetNotFound
const SampleGetNotFoundCode int = 404

/*SampleGetNotFound NotFound

swagger:response sampleGetNotFound
*/
type SampleGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSampleGetNotFound creates SampleGetNotFound with default headers values
func NewSampleGetNotFound() *SampleGetNotFound {

	return &SampleGetNotFound{}
}

// WithPayload adds the payload to the sample get not found response
func (o *SampleGetNotFound) WithPayload(payload *types.Error) *SampleGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample get not found response
func (o *SampleGetNotFound) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SampleGetInternalServerErrorCode is the HTTP code returned for type SampleGetInternalServerError
const SampleGetInternalServerErrorCode int = 500

/*SampleGetInternalServerError ServerError

swagger:response sampleGetInternalServerError
*/
type SampleGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *types.Error `json:"body,omitempty"`
}

// NewSampleGetInternalServerError creates SampleGetInternalServerError with default headers values
func NewSampleGetInternalServerError() *SampleGetInternalServerError {

	return &SampleGetInternalServerError{}
}

// WithPayload adds the payload to the sample get internal server error response
func (o *SampleGetInternalServerError) WithPayload(payload *types.Error) *SampleGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sample get internal server error response
func (o *SampleGetInternalServerError) SetPayload(payload *types.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SampleGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
